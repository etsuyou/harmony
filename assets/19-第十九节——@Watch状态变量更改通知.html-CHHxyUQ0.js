import{_ as n,c as s,o as a,d as t}from"./app-CZ3kukTv.js";const e={},p=t(`<h2 id="一、概念" tabindex="-1"><a class="header-anchor" href="#一、概念"><span>一、概念</span></a></h2><p>@Watch用于监听状态变量的变化，当状态变量变化时，@Watch的回调方法将被调用。@Watch在ArkUI框架内部判断数值有无更新使用的是严格相等（===），遵循严格相等规范。当在严格相等为false的情况下，就会触发@Watch的回调。</p><h2 id="二、注意" tabindex="-1"><a class="header-anchor" href="#二、注意"><span>二、注意</span></a></h2><ul><li>建议开发者避免无限循环。循环可能是因为在@Watch的回调方法里直接或者间接地修改了同一个状态变量引起的。为了避免循环的产生，建议不要在@Watch的回调方法里修改当前装饰的状态变量；</li><li>不建议在@Watch函数中调用async await，因为@Watch设计的用途是为了快速的计算，异步行为可能会导致重新渲染速度的性能问题。</li></ul><h2 id="三、装饰器说明" tabindex="-1"><a class="header-anchor" href="#三、装饰器说明"><span>三、装饰器说明</span></a></h2><table><thead><tr><th><strong>@Watch补充变量装饰器</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>装饰器参数</td><td>必填。常量字符串，字符串需要有引号。是(string) =&gt; void自定义成员函数的方法的引用。</td></tr><tr><td>可装饰的自定义组件变量</td><td>可监听所有装饰器装饰的状态变量。不允许监听常规变量。</td></tr><tr><td>装饰器的顺序</td><td>建议@State、@Prop、@Link等装饰器在@Watch装饰器之前。</td></tr></tbody></table><h2 id="四、使用" tabindex="-1"><a class="header-anchor" href="#四、使用"><span>四、使用</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LearnWatch <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * watch装饰器 用来装饰要观察的属性</span>
<span class="line">   * 注意：只能观察响应式数据</span>
<span class="line">   * 接收一个参数 是一个字符串 代表要触发的函数</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Watch</span></span><span class="token punctuation">(</span><span class="token string">&#39;numChange&#39;</span><span class="token punctuation">)</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">numChange</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;每次变化都会触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;+1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),l=[p];function c(i,o){return a(),s("div",null,l)}const r=n(e,[["render",c],["__file","19-第十九节——@Watch状态变量更改通知.html.vue"]]),d=JSON.parse('{"path":"/ArkTS/19-%E7%AC%AC%E5%8D%81%E4%B9%9D%E8%8A%82%E2%80%94%E2%80%94@Watch%E7%8A%B6%E6%80%81%E5%8F%98%E9%87%8F%E6%9B%B4%E6%94%B9%E9%80%9A%E7%9F%A5.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、概念","slug":"一、概念","link":"#一、概念","children":[]},{"level":2,"title":"二、注意","slug":"二、注意","link":"#二、注意","children":[]},{"level":2,"title":"三、装饰器说明","slug":"三、装饰器说明","link":"#三、装饰器说明","children":[]},{"level":2,"title":"四、使用","slug":"四、使用","link":"#四、使用","children":[]}],"git":{},"filePathRelative":"ArkTS/19-第十九节——@Watch状态变量更改通知.md"}');export{r as comp,d as data};
