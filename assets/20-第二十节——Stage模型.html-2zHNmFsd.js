import{_ as n,c as s,o as a,a as p}from"./app-Cuj6z6E9.js";const e={},t=p(`<h2 id="一、应用-组件级配置" tabindex="-1"><a class="header-anchor" href="#一、应用-组件级配置"><span>一、应用/组件级配置</span></a></h2><p>在开发应用时，需要配置应用的一些标签，例如应用的包名、图标等标识特征的属性。本文描述了在开发应用需要配置的一些关键标签。图标和标签通常一起配置，可以分为应用图标、应用标签和入口图标、入口标签，分别对应<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3" target="_blank" rel="noopener noreferrer">app.json5配置文件</a>和<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/module-configuration-file-0000001427744540-V3" target="_blank" rel="noopener noreferrer">module.json5配置文件</a>文件中的icon和label标签。应用图标和标签是在设置应用中使用，例如设置应用中的应用列表。入口图标是应用安装完成后在设备桌面上显示出来的，如图一所示。入口图标是以<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/uiability-overview-0000001477980929-V3" target="_blank" rel="noopener noreferrer">UIAbility</a>为粒度，支持同一个应用存在多个入口图标和标签，点击后进入对应的UIAbility界面。</p><h3 id="应用包名配置" tabindex="-1"><a class="header-anchor" href="#应用包名配置"><span><strong>应用包名配置</strong></span></a></h3><p>应用需要在工程的AppScope目录下的<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3" target="_blank" rel="noopener noreferrer">app.json5配置文件</a>中配置bundleName标签，该标签用于标识应用的唯一性。推荐采用反域名形式命名（如com.example.demo，建议第一级为域名后缀com，第二级为厂商/个人名，第三级为应用名，也可以多级）。</p><h3 id="应用图标和标签配置" tabindex="-1"><a class="header-anchor" href="#应用图标和标签配置"><span><strong>应用图标和标签配置</strong></span></a></h3><p>Stage模型的应用需要配置应用图标和应用标签。应用图标和标签是在设置应用中使用，例如设置应用中的应用列表，会显示出对应的图标和标签。 应用图标需要在工程的AppScope目录下的<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3" target="_blank" rel="noopener noreferrer">app.json5配置文件</a>中配置icon标签。应用图标需配置为图片的资源索引，配置完成后，该图片即为应用的图标。 应用标签需要在工程的AppScope模块下的<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3" target="_blank" rel="noopener noreferrer">app.json5配置文件</a>中配置label标签。标识应用对用户显示的名称，需要配置为字符串资源的索引。</p><blockquote><p>文档 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3" target="_blank" rel="noopener noreferrer">https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/app-configuration-file-0000001427584584-V3</a></p></blockquote><h3 id="入口图标和标签配置" tabindex="-1"><a class="header-anchor" href="#入口图标和标签配置"><span><strong>入口图标和标签配置</strong></span></a></h3><p>Stage模型支持对组件配置入口图标和入口标签。入口图标和入口标签会显示在桌面上。 入口图标需要在<a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/module-configuration-file-0000001427744540-V3" target="_blank" rel="noopener noreferrer">module.json5配置文件</a>中配置，在abilities标签下面有icon标签。例如希望在桌面上显示该UIAbility的图标，则需要在skills标签下面的entities中添加&quot;entity.system.home&quot;、actions中添加&quot;action.system.home&quot;。同一个应用有多个UIAbility配置上述字段时，桌面上会显示出多个图标，分别对应各自的UIAbility</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 该标签标识当前module的名字，module打包成hap后，表示hap的名称，标签值采用字符串表示（最大长度31个字节），该名称在整个应用要唯一</span></span>
<span class="line">    <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;entry&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 表示模块的类型，类型有三种，分别是entry、feature和har。</span></span>
<span class="line">    <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;entry&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 描述</span></span>
<span class="line">    <span class="token string-property property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$string:module_desc&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 该标签标识hap的入口ability名称或者extension名称。只有配置为mainElement的ability或者extension才允许在服务中心露出</span></span>
<span class="line">    <span class="token string-property property">&quot;mainElement&quot;</span><span class="token operator">:</span> <span class="token string">&quot;EntryAbility&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 该标签标识hap可以运行在哪类设备上，标签值采用字符串数组的表示。</span></span>
<span class="line">    <span class="token string-property property">&quot;deviceTypes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;phone&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string">&quot;tablet&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 标识当前Module是否在用户主动安装的时候安装，表示该Module对应的HAP是否跟随应用一起安装。- true：主动安装时安装。- false：主动安装时不安装</span></span>
<span class="line">    <span class="token string-property property">&quot;deliveryWithInstall&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 标识当前Module是否支持免安装特性。- true：表示支持免安装特性，且符合免安装约束。- false：表示不支持免安装特性</span></span>
<span class="line">    <span class="token string-property property">&quot;installationFree&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 对应的是main_pages.json文件，用于配置ability中用到的page信息。 可以理解为路由表，按住command点击可以进入</span></span>
<span class="line">    <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$profile:main_pages&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 存放当前模块中所有的ability元能力的配置信息，其中可以有多个ability</span></span>
<span class="line">    <span class="token string-property property">&quot;abilities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 该标签标识当前ability的逻辑名，该名称在整个应用要唯一，标签值采用字符串表示（最大长度127个字节）</span></span>
<span class="line">        <span class="token string-property property">&quot;srcEntry&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./ets/entryability/EntryAbility.ts&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 描述,</span></span>
<span class="line">        <span class="token comment">// ability的入口代码路径。,</span></span>
<span class="line">        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;EntryAbility&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$string:EntryAbility_desc&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// ability的图标。该标签标识ability图标，标签值为资源文件的索引。该标签可缺省，缺省值为空。如果ability被配置为MainElement，该标签必须配置</span></span>
<span class="line">        <span class="token string-property property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$media:icon&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// ability的标签名。</span></span>
<span class="line">        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$string:EntryAbility_label&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 启动页面的图标。</span></span>
<span class="line">        <span class="token string-property property">&quot;startWindowIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$media:icon&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 启动页面的背景色。</span></span>
<span class="line">        <span class="token string-property property">&quot;startWindowBackground&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$color:start_window_background&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;exported&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 标识能够接收的意图的action值的集合，取值通常为系统预定义的action值，也允许自定义。</span></span>
<span class="line">        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string-property property">&quot;entities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">              <span class="token string">&quot;entity.system.home&quot;</span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-property property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">              <span class="token string">&quot;action.system.home&quot;</span></span>
<span class="line">            <span class="token punctuation">]</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、uiability组件概述" tabindex="-1"><a class="header-anchor" href="#二、uiability组件概述"><span>二、UIAbility组件概述</span></a></h2><p>UIAbility组件是一种包含UI界面的应用组件，主要用于和用户交互。 UIAbility组件是系统调度的基本单元，为应用提供绘制界面的窗口；一个UIAbility组件中可以通过多个页面来实现一个功能模块。每一个UIAbility组件实例，都对应于一个最近任务列表中的任务。</p><h3 id="uiability组件生命周期" tabindex="-1"><a class="header-anchor" href="#uiability组件生命周期"><span>UIAbility组件生命周期</span></a></h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/12928539/1702392397546-87af2256-5549-449e-afe8-6d1ef4894365.png#averageHue=%23f4f4f4&amp;clientId=ua6394e32-7c17-4&amp;from=paste&amp;height=190&amp;id=u20ab36ea&amp;originHeight=380&amp;originWidth=668&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=24845&amp;status=done&amp;style=none&amp;taskId=u7f02cc3f-a682-445c-b5ab-a49832f79ee&amp;title=&amp;width=334" alt="image.png"> 当用户打开、切换和返回到对应应用时，应用中的UIAbility实例会在其生命周期的不同状态之间转换。UIAbility类提供了一系列回调，通过这些回调可以知道当前UIAbility实例的某个状态发生改变，会经过UIAbility实例的创建和销毁，或者UIAbility实例发生了前后台的状态切换。 UIAbility的生命周期包括Create、Foreground、Background、Destroy四个状态 <img src="https://cdn.nlark.com/yuque/0/2023/png/12928539/1702392353775-acd7f56a-5dec-4793-ba04-c0d6730906f1.png#averageHue=%23cfd0cd&amp;clientId=ua6394e32-7c17-4&amp;from=paste&amp;height=569&amp;id=u9b58fa48&amp;originHeight=1138&amp;originWidth=804&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=305968&amp;status=done&amp;style=none&amp;taskId=u7eb1dc9d-ffd1-4469-87c4-f8fc29bc83c&amp;title=&amp;width=402" alt="image.png"></p><h4 id="create状态" tabindex="-1"><a class="header-anchor" href="#create状态"><span>Create状态</span></a></h4><p>Create状态为在应用加载过程中，UIAbility实例创建完成时触发，系统会调用onCreate()回调。可以在该回调中进行应用初始化操作，例如变量定义资源加载等，用于后续的UI界面展示。 want文档 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/want-overview-0000001478340877-V3" target="_blank" rel="noopener noreferrer">https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/want-overview-0000001478340877-V3</a></p><h4 id="windowstagecreate" tabindex="-1"><a class="header-anchor" href="#windowstagecreate"><span>WindowStageCreate</span></a></h4><p>UIAbility实例创建完成之后，在进入Foreground之前，系统会创建一个WindowStage。WindowStage创建完成后会进入onWindowStageCreate()回调，可以在该回调中设置UI界面加载、设置WindowStage的事件订阅。 窗口开发文档 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/application-window-stage-0000001427584712-V3" target="_blank" rel="noopener noreferrer">https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/application-window-stage-0000001427584712-V3</a></p><h4 id="windowstagedestroy" tabindex="-1"><a class="header-anchor" href="#windowstagedestroy"><span>WindowStageDestroy</span></a></h4><p>对应于onWindowStageCreate()回调。在UIAbility实例销毁之前，则会先进入onWindowStageDestroy()回调，可以在该回调中释放UI界面资源。例如在onWindowStageDestroy()中注销获焦/失焦等WindowStage事件。</p><h4 id="foreground" tabindex="-1"><a class="header-anchor" href="#foreground"><span>Foreground</span></a></h4><p>onForeground()回调，在UIAbility的UI界面可见之前，如UIAbility切换至前台时触发。可以在onForeground()回调中申请系统需要的资源，或者重新申请在onBackground()中释放的资源。</p><h4 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h4><p>onBackground()回调，在UIAbility的UI界面完全不可见之后，如UIAbility切换至后台时候触发。可以在onBackground()回调中释放UI界面不可见时无用的资源，或者在此回调中执行较为耗时的操作，例如状态保存等。</p><h4 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy"><span>Destroy</span></a></h4><p>Destroy状态在UIAbility实例销毁时触发。可以在onDestroy()回调中进行系统资源的释放、数据的保存等操作。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> UIAbility <span class="token keyword">from</span> <span class="token string">&#39;@ohos.app.ability.UIAbility&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> hilog <span class="token keyword">from</span> <span class="token string">&#39;@ohos.hilog&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> window <span class="token keyword">from</span> <span class="token string">&#39;@ohos.window&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建storage</span></span>
<span class="line"><span class="token keyword">const</span> localStorage<span class="token operator">:</span> LocalStorage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocalStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>globalName<span class="token operator">:</span> <span class="token string">&quot;全局的名字&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">EntryAbility</span> <span class="token keyword">extends</span> <span class="token class-name">UIAbility</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 挂载到实例里</span></span>
<span class="line">  storage<span class="token operator">:</span> LocalStorage <span class="token operator">=</span> localStorage</span>
<span class="line"></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   *</span>
<span class="line">   * 当前Extension相关的Want类型信息，包括ability名称、bundle名称等。</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token function">onCreate</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;UIAbility实例创建完成时触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;销毁触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 在onWindowStageCreate()</span>
<span class="line">   * 回调中通过loadContent()方法</span>
<span class="line">   * 设置应用要加载的页面并根据需要订阅WindowStage的事件（获焦/失焦、可见/不可见）</span>
<span class="line">   * <span class="token keyword">@param</span> <span class="token parameter">windowStage</span></span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">onWindowStageCreate</span><span class="token punctuation">(</span>windowStage<span class="token operator">:</span> window<span class="token punctuation">.</span>WindowStage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// 设置UI加载界面或者说首先加载的页面</span></span>
<span class="line">    windowStage<span class="token punctuation">.</span><span class="token function">loadContent</span><span class="token punctuation">(</span><span class="token string">&#39;pages/LearnStorage&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onWindowStageDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;销毁前调用&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;切前台触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;切后台触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiability组件与ui的数据同步" tabindex="-1"><a class="header-anchor" href="#uiability组件与ui的数据同步"><span>UIAbility组件与UI的数据同步</span></a></h3><p>基于HarmonyOS的应用模型，可以通过以下两种方式来实现UIAbility组件与UI之间的数据同步。</p><ol><li>EventHub：基于发布订阅模式来实现，事件需要先订阅后发布，订阅者收到消息后进行处理。</li><li>globalThis：ArkTS引擎实例内部的一个全局对象，在ArkTS引擎实例内部都能访问</li></ol><h4 id="使用eventhub进行数据通信" tabindex="-1"><a class="header-anchor" href="#使用eventhub进行数据通信"><span>使用EventHub进行数据通信</span></a></h4><p>EventHub提供了UIAbility组件/ExtensionAbility组件级别的事件机制，以UIAbility组件/ExtensionAbility组件为中心提供了订阅、取消订阅和触发事件的数据通信能力 <strong>UIAbility</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> common <span class="token keyword">from</span> <span class="token string">&#39;@ohos.app.ability.common&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;@ohos.router&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LearnStorage <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">onPageShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;每次显示触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onPageHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;每次隐藏触发&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">onBackPress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;返回触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发一次？&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">aboutToDisappear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;卸载触发&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;跳转到其他页面&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 跳转到的时候会触发隐藏的生命周期</span></span>
<span class="line">          router<span class="token punctuation">.</span><span class="token function">pushUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;pages/LearnRouter1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;替换当前页面&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 会触发卸载生命周期</span></span>
<span class="line">          router<span class="token punctuation">.</span><span class="token function">replaceUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;pages/LearnRouter1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>页面</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token comment">// 应用上下文Context https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-app-ability-common-0000001544583981-V3</span></span>
<span class="line"><span class="token keyword">import</span> common <span class="token keyword">from</span> <span class="token string">&#39;@ohos.app.ability.common&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LearnUI <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token keyword">as</span> common<span class="token punctuation">.</span>UIAbilityContext<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;点击问好&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 调用</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>eventHub<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;哈哈哈&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用globalthis进行数据同步" tabindex="-1"><a class="header-anchor" href="#使用globalthis进行数据同步"><span>使用globalThis进行数据同步</span></a></h4><p>globalThis是ArkTS引擎实例内部的一个全局对象，引擎内部的UIAbility/ExtensionAbility/Page都可以使用，因此可以使用globalThis全局对象进行数据同步。</p>`,37),i=[t];function o(l,c){return a(),s("div",null,i)}const r=n(e,[["render",o],["__file","20-第二十节——Stage模型.html.vue"]]),d=JSON.parse('{"path":"/Beginner/20-%E7%AC%AC%E4%BA%8C%E5%8D%81%E8%8A%82%E2%80%94%E2%80%94Stage%E6%A8%A1%E5%9E%8B.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、应用/组件级配置","slug":"一、应用-组件级配置","link":"#一、应用-组件级配置","children":[{"level":3,"title":"应用包名配置","slug":"应用包名配置","link":"#应用包名配置","children":[]},{"level":3,"title":"应用图标和标签配置","slug":"应用图标和标签配置","link":"#应用图标和标签配置","children":[]},{"level":3,"title":"入口图标和标签配置","slug":"入口图标和标签配置","link":"#入口图标和标签配置","children":[]}]},{"level":2,"title":"二、UIAbility组件概述","slug":"二、uiability组件概述","link":"#二、uiability组件概述","children":[{"level":3,"title":"UIAbility组件生命周期","slug":"uiability组件生命周期","link":"#uiability组件生命周期","children":[]},{"level":3,"title":"UIAbility组件与UI的数据同步","slug":"uiability组件与ui的数据同步","link":"#uiability组件与ui的数据同步","children":[]}]}],"git":{"updatedTime":1719385700000,"contributors":[{"name":"etsuyou","email":"etsuyou.shuu@gmail.com","commits":1}]},"filePathRelative":"Beginner/20-第二十节——Stage模型.md"}');export{r as comp,d as data};
