import{_ as e,c as t,o as a,a as o}from"./app-G_LJPxZj.js";const n={},s=o('<h2 id="一、长列表的处理" tabindex="-1"><a class="header-anchor" href="#一、长列表的处理"><span>一、长列表的处理</span></a></h2><p>循环渲染适用于短列表，当构建具有大量列表项的长列表时，如果直接采用循环渲染方式，会一次性加载所有的列表元素，会导致页面启动时间过长，影响用户体验。因此，推荐使用数据懒加载（LazyForEach）方式实现按需迭代加载数据，从而提升列表性能 文档： <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/arkts-layout-development-create-list-0000001451074018-V3#section94148431926" target="_blank" rel="noopener noreferrer">https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/arkts-layout-development-create-list-0000001451074018-V3#section94148431926</a></p><h2 id="二、需求" tabindex="-1"><a class="header-anchor" href="#二、需求"><span>二、需求</span></a></h2><p>下拉刷新 顶栏切换</p>',4),r=[s];function c(i,l){return a(),t("div",null,r)}const d=e(n,[["render",c],["__file","18-第十八节——实战——List组件的使用之商品列表.html.vue"]]),h=JSON.parse('{"path":"/Beginner/18-%E7%AC%AC%E5%8D%81%E5%85%AB%E8%8A%82%E2%80%94%E2%80%94%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94List%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B9%8B%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、长列表的处理","slug":"一、长列表的处理","link":"#一、长列表的处理","children":[]},{"level":2,"title":"二、需求","slug":"二、需求","link":"#二、需求","children":[]}],"git":{"updatedTime":1719764287000,"contributors":[{"name":"etsuyou","email":"etsuyou.shuu@gmail.com","commits":2}]},"filePathRelative":"Beginner/18-第十八节——实战——List组件的使用之商品列表.md"}');export{d as comp,h as data};
