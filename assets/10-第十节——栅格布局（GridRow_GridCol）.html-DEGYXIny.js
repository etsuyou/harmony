import{_ as n,c as s,o as a,a as p}from"./app-Cuj6z6E9.js";const t={},e=p(`<h2 id="一、概念" tabindex="-1"><a class="header-anchor" href="#一、概念"><span>一、概念</span></a></h2><ol><li>提供可循的规律：栅格布局可以为布局提供规律性的结构，解决多尺寸多设备的动态布局问题。通过将页面划分为等宽的列数和行数，可以方便地对页面元素进行定位和排版。</li><li>统一的定位标注：栅格布局可以为系统提供一种统一的定位标注，保证不同设备上各个模块的布局一致性。这可以减少设计和开发的复杂度，提高工作效率。</li><li>灵活的间距调整方法：栅格布局可以提供一种灵活的间距调整方法，满足特殊场景布局调整的需求。通过调整列与列之间和行与行之间的间距，可以控制整个页面的排版效果。</li><li>自动换行和自适应：栅格布局可以完成一对多布局的自动换行和自适应。当页面元素的数量超出了一行或一列的容量时，他们会自动换到下一行或下一列，并且在不同的设备上自适应排版，使得页面布局更加灵活和适应性强</li><li>栅格的默认列数12列</li></ol><h2 id="二、栅格容器gridrow" tabindex="-1"><a class="header-anchor" href="#二、栅格容器gridrow"><span>二、栅格容器GridRow</span></a></h2><p>栅格系统以设备的水平宽度（屏幕密度像素值，单位vp）作为断点依据，定义设备的宽度类型，形成了一套断点规则。开发者可根据需求在不同的断点区间实现不同的页面布局效果。</p><h3 id="栅格系统默认断点将设备宽度分为xs、sm、md、lg" tabindex="-1"><a class="header-anchor" href="#栅格系统默认断点将设备宽度分为xs、sm、md、lg"><span>栅格系统默认断点将设备宽度分为xs、sm、md、lg</span></a></h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/12928539/1701763835716-ba5c45ce-90f8-462c-9589-9e6ef4ef0d9a.png#averageHue=%23f6f6f6&amp;clientId=u7515b215-e467-4&amp;from=paste&amp;height=228&amp;id=ufef50d27&amp;originHeight=456&amp;originWidth=1792&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=79446&amp;status=done&amp;style=none&amp;taskId=ua4913194-4e28-47f4-b898-c8834675fc2&amp;title=&amp;width=896" alt="image.png"></p><h3 id="在gridrow栅格组件中-允许开发者使用breakpoints自定义修改断点的取值范围-最多支持6个断点" tabindex="-1"><a class="header-anchor" href="#在gridrow栅格组件中-允许开发者使用breakpoints自定义修改断点的取值范围-最多支持6个断点"><span>在GridRow栅格组件中，允许开发者使用breakpoints自定义修改断点的取值范围，最多支持6个断点</span></a></h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/12928539/1701763885496-f172eb4c-b7e4-44f9-b82d-d89b014439fd.png#averageHue=%23f8f8f8&amp;clientId=u7515b215-e467-4&amp;from=paste&amp;height=316&amp;id=u838742fd&amp;originHeight=632&amp;originWidth=1790&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=84489&amp;status=done&amp;style=none&amp;taskId=u804eea9f-8672-4a7a-885a-cc5a5e6ced2&amp;title=&amp;width=895" alt="image.png"></p><h3 id="针对断点位置-开发者根据实际使用场景-通过一个单调递增数组设置。由于breakpoints最多支持六个断点" tabindex="-1"><a class="header-anchor" href="#针对断点位置-开发者根据实际使用场景-通过一个单调递增数组设置。由于breakpoints最多支持六个断点"><span>针对断点位置，开发者根据实际使用场景，通过一个单调递增数组设置。由于breakpoints最多支持六个断点</span></a></h3><p>按照上述表格位置一次排列</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token comment">// 表示启用xs、sm、md共3个断点，小于100vp为xs，100vp-200vp为sm，大于200vp为md</span></span>
<span class="line">breakpoints<span class="token operator">:</span> <span class="token punctuation">{</span>value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;100vp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;200vp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 表示启用xs、sm、md、lg、xl共5个断点，小于320vp为xs，320vp-520vp为sm，520vp-840vp为md，840vp-1080vp为lg，大于1080vp为xl。</span></span>
<span class="line">breakpoints<span class="token operator">:</span> <span class="token punctuation">{</span>value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;320vp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;520vp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;840vp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1080vp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="栅格系统通过监听窗口或容器的尺寸变化进行断点-通过reference设置断点切换参考物。-考虑到应用可能以非全屏窗口的形式显示-以应用窗口宽度为参照物更为通用" tabindex="-1"><a class="header-anchor" href="#栅格系统通过监听窗口或容器的尺寸变化进行断点-通过reference设置断点切换参考物。-考虑到应用可能以非全屏窗口的形式显示-以应用窗口宽度为参照物更为通用"><span>栅格系统通过监听窗口或容器的尺寸变化进行断点，通过reference设置断点切换参考物。 考虑到应用可能以非全屏窗口的形式显示，以应用窗口宽度为参照物更为通用</span></a></h3><h2 id="三、布局的总列数" tabindex="-1"><a class="header-anchor" href="#三、布局的总列数"><span>三、布局的总列数</span></a></h2><h3 id="columns默认值为12-即在未设置columns时-任何断点下-栅格布局被分成12列" tabindex="-1"><a class="header-anchor" href="#columns默认值为12-即在未设置columns时-任何断点下-栅格布局被分成12列"><span>columns默认值为12，即在未设置columns时，任何断点下，栅格布局被分成12列</span></a></h3><h3 id="当columns为自定义值-栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8-子元素默认占一列" tabindex="-1"><a class="header-anchor" href="#当columns为自定义值-栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8-子元素默认占一列"><span>当columns为自定义值，栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8，子元素默认占一列</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LearnRelativeContainer <span class="token punctuation">{</span></span>
<span class="line">  bgColors <span class="token operator">=</span> <span class="token punctuation">[</span>Color<span class="token punctuation">.</span>Yellow<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Orange<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Yellow<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Orange<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">]</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> gridColumns<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">4</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;切换&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>gridColumns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gridColumns <span class="token operator">===</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token number">4</span> <span class="token operator">:</span> <span class="token number">8</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">GridRow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 设置为4份</span></span>
<span class="line">          columns<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gridColumns</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bgColors<span class="token punctuation">,</span> <span class="token punctuation">(</span>color<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">GridCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">              <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、子组件gridcol" tabindex="-1"><a class="header-anchor" href="#四、子组件gridcol"><span>四、子组件GridCol</span></a></h2><p>GridCol组件作为GridRow组件的子组件，通过给GridCol传参或者设置属性两种方式，设置span（占用列数），offset（偏移列数），order（元素序号）的值。</p><h3 id="span" tabindex="-1"><a class="header-anchor" href="#span"><span>span</span></a></h3><p>子组件占栅格布局的列数，决定了子组件的宽度，默认为1。</p><h4 id="当类型为number时-子组件在所有尺寸设备下占用的列数相同" tabindex="-1"><a class="header-anchor" href="#当类型为number时-子组件在所有尺寸设备下占用的列数相同"><span>当类型为number时，子组件在所有尺寸设备下占用的列数相同</span></a></h4><h4 id="当类型为gridcolcolumnoption时-支持六种不同尺寸-xs-sm-md-lg-xl-xxl-设备中子组件所占列数设置-各个尺寸下数值可不同" tabindex="-1"><a class="header-anchor" href="#当类型为gridcolcolumnoption时-支持六种不同尺寸-xs-sm-md-lg-xl-xxl-设备中子组件所占列数设置-各个尺寸下数值可不同"><span>当类型为GridColColumnOption时，支持六种不同尺寸（xs, sm, md, lg, xl, xxl）设备中子组件所占列数设置,各个尺寸下数值可不同</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token comment">// 伪代码</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> bgColors<span class="token operator">:</span> Color<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Orange<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line"><span class="token function">GridRow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> columns<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bgColors<span class="token punctuation">,</span> <span class="token punctuation">(</span>color<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">GridCol</span><span class="token punctuation">(</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> sm<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      </span>
<span class="line">      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;50vp&#39;</span><span class="token punctuation">)</span>          </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span>     </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、使用" tabindex="-1"><a class="header-anchor" href="#五、使用"><span>五、使用</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span></span>
<span class="line">struct LearnRelativeContainer <span class="token punctuation">{</span></span>
<span class="line">  bgColors <span class="token operator">=</span> <span class="token punctuation">[</span>Color<span class="token punctuation">.</span>Yellow<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Orange<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">]</span></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> componentWidth<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>componentWidth <span class="token operator">===</span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token string">&#39;宽度变为400&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;宽度变为100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>componentWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>componentWidth <span class="token operator">===</span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">400</span> <span class="token operator">:</span> <span class="token number">100</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">GridRow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          breakpoints<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;200vp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;300vp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// 根据组件宽度</span></span>
<span class="line">            reference<span class="token operator">:</span> BreakpointsReference<span class="token punctuation">.</span>ComponentSize</span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token comment">// 设置默认为4份</span></span>
<span class="line">          columns<span class="token operator">:</span> <span class="token number">4</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bgColors<span class="token punctuation">,</span> <span class="token punctuation">(</span>color<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">GridCol</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">              span<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 小于200的时候竖排也就是占满4份</span></span>
<span class="line">                xs<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 大于400的时候占1分</span></span>
<span class="line">                sm<span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line">              <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">              <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>componentWidth<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[e];function l(c,i){return a(),s("div",null,o)}const r=n(t,[["render",l],["__file","10-第十节——栅格布局（GridRow_GridCol）.html.vue"]]),k=JSON.parse('{"path":"/Beginner/10-%E7%AC%AC%E5%8D%81%E8%8A%82%E2%80%94%E2%80%94%E6%A0%85%E6%A0%BC%E5%B8%83%E5%B1%80%EF%BC%88GridRow_GridCol%EF%BC%89.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、概念","slug":"一、概念","link":"#一、概念","children":[]},{"level":2,"title":"二、栅格容器GridRow","slug":"二、栅格容器gridrow","link":"#二、栅格容器gridrow","children":[{"level":3,"title":"栅格系统默认断点将设备宽度分为xs、sm、md、lg","slug":"栅格系统默认断点将设备宽度分为xs、sm、md、lg","link":"#栅格系统默认断点将设备宽度分为xs、sm、md、lg","children":[]},{"level":3,"title":"在GridRow栅格组件中，允许开发者使用breakpoints自定义修改断点的取值范围，最多支持6个断点","slug":"在gridrow栅格组件中-允许开发者使用breakpoints自定义修改断点的取值范围-最多支持6个断点","link":"#在gridrow栅格组件中-允许开发者使用breakpoints自定义修改断点的取值范围-最多支持6个断点","children":[]},{"level":3,"title":"针对断点位置，开发者根据实际使用场景，通过一个单调递增数组设置。由于breakpoints最多支持六个断点","slug":"针对断点位置-开发者根据实际使用场景-通过一个单调递增数组设置。由于breakpoints最多支持六个断点","link":"#针对断点位置-开发者根据实际使用场景-通过一个单调递增数组设置。由于breakpoints最多支持六个断点","children":[]},{"level":3,"title":"栅格系统通过监听窗口或容器的尺寸变化进行断点，通过reference设置断点切换参考物。 考虑到应用可能以非全屏窗口的形式显示，以应用窗口宽度为参照物更为通用","slug":"栅格系统通过监听窗口或容器的尺寸变化进行断点-通过reference设置断点切换参考物。-考虑到应用可能以非全屏窗口的形式显示-以应用窗口宽度为参照物更为通用","link":"#栅格系统通过监听窗口或容器的尺寸变化进行断点-通过reference设置断点切换参考物。-考虑到应用可能以非全屏窗口的形式显示-以应用窗口宽度为参照物更为通用","children":[]}]},{"level":2,"title":"三、布局的总列数","slug":"三、布局的总列数","link":"#三、布局的总列数","children":[{"level":3,"title":"columns默认值为12，即在未设置columns时，任何断点下，栅格布局被分成12列","slug":"columns默认值为12-即在未设置columns时-任何断点下-栅格布局被分成12列","link":"#columns默认值为12-即在未设置columns时-任何断点下-栅格布局被分成12列","children":[]},{"level":3,"title":"当columns为自定义值，栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8，子元素默认占一列","slug":"当columns为自定义值-栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8-子元素默认占一列","link":"#当columns为自定义值-栅格布局在任何尺寸设备下都被分为columns列。下面分别设置栅格布局列数为4和8-子元素默认占一列","children":[]}]},{"level":2,"title":"四、子组件GridCol","slug":"四、子组件gridcol","link":"#四、子组件gridcol","children":[{"level":3,"title":"span","slug":"span","link":"#span","children":[]}]},{"level":2,"title":"五、使用","slug":"五、使用","link":"#五、使用","children":[]}],"git":{"updatedTime":1719385700000,"contributors":[{"name":"etsuyou","email":"etsuyou.shuu@gmail.com","commits":1}]},"filePathRelative":"Beginner/10-第十节——栅格布局（GridRow_GridCol）.md"}');export{r as comp,k as data};
